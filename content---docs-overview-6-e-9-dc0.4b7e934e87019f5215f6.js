(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{50:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));n(0);var a=n(64);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s={id:"overview",title:"Overview"},p=[{value:"What are repeaters?",id:"what-are-repeaters",children:[]},{value:"Creating repeaters",id:"creating-repeaters",children:[]},{value:"Acknowledgments",id:"acknowledgments",children:[]}],c={rightToc:p},i="wrapper";function l(e){var t=e.components,n=o(e,["components"]);return Object(a.b)(i,r({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"what-are-repeaters"},"What are repeaters?"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Note: These docs assume some familiarity with recent javascript features, specifically ",Object(a.b)("a",r({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Promises"}),"promises"),", ",Object(a.b)("a",r({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"}),"async/await")," and ",Object(a.b)("a",r({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators"}),"iterators/generators"),".")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"Repeater")," object represents an asynchronous sequence of values. These values can be read using the methods found on the ",Object(a.b)("a",r({parentName:"p"},{href:"https://tc39.es/ecma262/#sec-asynciterator-interface"}),"async iterator interface"),". ",Object(a.b)("inlineCode",{parentName:"p"},"Repeater.prototype.next")," returns a promise which resolves to the next iteration result, and ",Object(a.b)("inlineCode",{parentName:"p"},"Repeater.prototype.return")," prematurely ends iteration. Repeaters are most useful when consumed via ",Object(a.b)("a",r({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of"}),Object(a.b)("inlineCode",{parentName:"a"},"for await…of"))," loops, which call and await the repeater’s ",Object(a.b)("inlineCode",{parentName:"p"},"next")," and ",Object(a.b)("inlineCode",{parentName:"p"},"return")," methods automatically."),Object(a.b)("p",null,"Repeaters are designed with the explicit goal of behaving exactly like async generator objects and contain no methods or properties not found on async iterator interface. If you discover a discrepancy between repeaters and async generators, please ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/repeaterjs/repeater/issues/new"}),"open an issue"),"."),Object(a.b)("h2",{id:"creating-repeaters"},"Creating repeaters"),Object(a.b)("p",null,"Inspired by the ",Object(a.b)("inlineCode",{parentName:"p"},"Promise")," constructor, the ",Object(a.b)("inlineCode",{parentName:"p"},"Repeater")," constructor takes an ",Object(a.b)("em",{parentName:"p"},"executor"),", a function which is passed the arguments ",Object(a.b)("inlineCode",{parentName:"p"},"push")," and ",Object(a.b)("inlineCode",{parentName:"p"},"stop"),". These arguments are analogous to the ",Object(a.b)("inlineCode",{parentName:"p"},"resolve")," and ",Object(a.b)("inlineCode",{parentName:"p"},"reject")," functions passed to the promise executor: ",Object(a.b)("inlineCode",{parentName:"p"},"push")," can be called with a value so that ",Object(a.b)("inlineCode",{parentName:"p"},"next")," resolves to that value, and ",Object(a.b)("inlineCode",{parentName:"p"},"stop")," can be called with an error so that ",Object(a.b)("inlineCode",{parentName:"p"},"next")," rejects with that error."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'const repeater = new Repeater((push, stop) => {\n  push(1);\n  stop(new Error("My error"));\n});\n\n(async () => {\n  console.log(await repeater.next());   // { value: 1, done: false }\n  try {\n    console.log(await repeater.next()); // This line throws an error.\n  } catch (err) {\n    console.log(err); // Error: My error\n  }\n})();\n')),Object(a.b)("p",null,"However, unlike ",Object(a.b)("inlineCode",{parentName:"p"},"resolve"),", ",Object(a.b)("inlineCode",{parentName:"p"},"push")," can be called more than once to enqueue multiple values, and unlike ",Object(a.b)("inlineCode",{parentName:"p"},"reject"),", ",Object(a.b)("inlineCode",{parentName:"p"},"stop")," can be called with no arguments to close the repeater without error."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"const repeater = new Repeater((push, stop) => {\n  push(1);\n  push(2);\n  push(3);\n  push(4);\n  stop();\n});\n\n(async () => {\n  console.log(await repeater.next()); // { value: 1, done: false }\n  console.log(await repeater.next()); // { value: 2, done: false }\n  console.log(await repeater.next()); // { value: 3, done: false }\n  console.log(await repeater.next()); // { value: 4, done: false }\n  console.log(await repeater.next()); // { done: true }\n})();\n")),Object(a.b)("p",null,"In addition, the executor API exposes promises which resolve according to the state of the repeater. The ",Object(a.b)("inlineCode",{parentName:"p"},"push")," function returns a promise which resolves when ",Object(a.b)("inlineCode",{parentName:"p"},"next")," is called, and the ",Object(a.b)("inlineCode",{parentName:"p"},"stop")," function doubles as a promise which resolves when the repeater is stopped. As a promise, ",Object(a.b)("inlineCode",{parentName:"p"},"stop")," can be awaited to defer event listener cleanup."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'const repeater = new Repeater(async (push, stop) => {\n  console.log("repeater started!");\n  await push(1);\n  console.log("pushed 1");\n  await push(2);\n  console.log("pushed 2");\n  await stop;\n  console.log("done");\n});\n\n(async () => {\n  console.log(await repeater.next());\n  // repeater started!\n  // { value: 1, done: false }\n  console.log(await repeater.next());\n  // "pushed 1"\n  // { value: 2, done: false }\n  console.log(await repeater.return());\n  // "pushed 2"\n  // "done"\n  // { done: true }\n})();\n')),Object(a.b)("p",null,"These two arguments make it easy to setup and teardown callbacks within the executor, and they can be exposed to parent closures to model architectural patterns like ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/repeaterjs/repeater/blob/master/packages/pubsub"}),"generic pubsub classes")," and ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/repeaterjs/repeater/blob/master/packages/limiters"}),"semaphores"),"."),Object(a.b)("h2",{id:"acknowledgments"},"Acknowledgments"),Object(a.b)("p",null,"Thanks to Clojure’s ",Object(a.b)("inlineCode",{parentName:"p"},"core.async")," for inspiring the basic data structure and algorithm for pushing and pulling values. The implementation of repeaters is more or less based on ",Object(a.b)("a",r({parentName:"p"},{href:"https://vimeo.com/100518968"}),"this presentation")," explaining ",Object(a.b)("inlineCode",{parentName:"p"},"core.async")," internals."),Object(a.b)("p",null,"Thanks to ",Object(a.b)("a",r({parentName:"p"},{href:"https://stackoverflow.com/a/47214496/1825413"}),"this StackOverflow answer")," for providing a helpful overview of the different types of async APIs available in javascript."))}l.isMDXComponent=!0},64:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a),o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},p=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)};var c="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},l=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),l=s(n),u=a,b=l[p+"."+u]||l[u]||i[u]||o;return n?r.a.createElement(b,Object.assign({},{ref:t},c,{components:n})):r.a.createElement(b,Object.assign({},{ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=l;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:a,s[1]=p;for(var u=2;u<o;u++)s[u]=n[u];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);