(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{43:function(e){e.exports=JSON.parse('{"id":"combinators","title":"Combining Async Iterators","description":"Combining async iterators is a [non-trivial task](https://stackoverflow.com/questions/50585456/how-can-i-interleave-merge-async-iterables), and the `Repeater` class defines four static methods similar to `Promise.race` and `Promise.all` which allow you to combine async iterators in different ways. These methods can be used to write applications in the [reactive programming](https://en.wikipedia.org/wiki/Reactive_programming) paradigm.","source":"@site/docs/04_combinators.md","permalink":"/docs/combinators","sidebar":"docs","category":"Guides","next":"safety","previous":"rationale","previous_title":"Rationale","next_title":"How are Repeaters “Safe”?"}')}}]);